package euler;
import java.math.BigInteger;
import java.util.ArrayList;
public class Euler29 {  
    
/*Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/
public Euler29 ()
   {
       
   ArrayList<BigInteger> list = new ArrayList<BigInteger>();
    for(BigInteger a = BigInteger.valueOf(2); a.compareTo(BigInteger.valueOf(101)) != 0; a = a.add(BigInteger.ONE))
    {
         for(int b = 2; b<=100; b++)
        {
            BigInteger answer = a.pow(b);
            list.add(answer);
        }
    }
    for(int i = 0; i<list.size(); i++)
    {
        for(int j = i+1; j<list.size(); j++)  
        {
            if (list.get(i).equals(list.get(j)) )
            {
                list.remove(j);
            }
        }      
    }
    System.out.println(list.size());
   }
}
